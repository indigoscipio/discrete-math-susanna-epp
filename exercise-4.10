Test yourself

1. when an algorithm statement of the form x:=e is executed, ___
answer: variable x is assigned with the value of e, the value is stored in the emory location

2. consider an algorithm statement of the following form:

if (cond)
then s1
else s2

when such a statement is executed, the truth or falsity of the condition is evaluatd.
if condition is true ___
if the condition is false, ___

answer: s1 is evaluated, s2 is evaluated

3. consider an algorithm  statement of the following
while (condition)
[loop body]
end while

when such a statement is executed, the truth or falsity of the condition is evaluated.
If the condition is true -__, if the condition is false, ___
answer: loop body is executed in order, go to next cond statement

4. Consider an algorithm statement of the following form.

for variable :=initial expression to final expression.
  [statements that make up the body of the loop]
  next (same) variable 

When such a statement is executed, variable is set 
equal to the value of the initial expression, and a 
check is made to determine whether the value of 
variable is less than or equal to the value of final 
expression. If so, ___ . If not, ___ .
answer: loop body is run and variable is increased by 1 until it reaches final expression, loop ends

5. given a nonnegatiev integer a and positive integer d the division algorithm computes
q and r with n = dq + r and 0 <= r < d
answer: the quotient q 
keep dividing a by d until the remainder is less than or equal to d
returns the final quotient and the remainder

6. given integers a and b, not both zero, gcd(a,b) is the integer d that satisfies the following two conditions;
d divides a, d divides b, there is a common divisor c where c <= d and c | a and c | b

7. if r is a positive intger, then gcd(r,0) is r

8. if a and b are integers not both zero and if q and r are nonnegative integeres such that a = bq + r, then
gcd (a,b) = gcd(b,r)

9. given the positive integers a and b with a > b, the euclidian algorithm computes
the GCD of A,B 

find the value of z when each of the algorithm segments in 1 and 2 is executed

1.
i:=2
if (i > 3 or i <= 0)
then z:= 1
else z:= 0

answer:
first assignment, i = 2
check if (2 > 3 (f) or 2 <= 0 (f)) - evaluates to false
z = 0 is executed, therefore z = 0

2.
i:=3
if(i<=3 or i>6)
then z:= 2
else z=0
answer:
initial variable assignment, i = 3
next check if (3<=3 (t) or 3>6 (f)) -> evaluates to true
z:=2 is executed - therefore z = 2

3. consider the following algorithm segment

if x . y > 0
then do
y := 3 . x
x := x + 1
end do
z = x . y

find the value of z if prior to execution x and y have the values given below
a. x = 2, y = 3, z = ??

answer:
check if 2 . 3 > 0 - true
y = 3.3 = 9
x = 2 + 1 = 3
z = 3 . 9 = 27
therefore z = 27

b. x = 1, y = 1
answer:
check if 1.1 > 0 - true
y = 3 .1 = 3
x = 1 + 1 = 2
z = 2 . 3 = 6
therefore z = 6


find the values of a and e after execution of the loops in 4 and 5 by first making trace tables for them

4.
a:=2
for i := 1 to 3
a:= 3a + 1
next i

Trace table
Iteration 0 (initial, before the loop runs)
i = unassigned
a = 2

Iteration 1
i = 1
a = 3.2 + 1 = 7

Iteration 2
i = 2
a = 3.7 + 1 = 22

iteration 3
i = 3
a = 3 . 22 + 1 = 67

i reaches or equal to 3, loop stops, evaluate final a
therefore final a = 67


5.
e:=2, f:=0
for k:=1 to 3
e:=e.k
f:= e+f
next k

Trace table
Iter 0 (initial, before loop is executed)
k = unassigned
e = 2
f = 0

Iter 1
k = 1
e = 2 . 1 = 2
f = 2 + 0 = 2

iter 2
k = 2
e = 2 . 2 = 4
f = 4 + 2 = 6

iter 3
k = 3
e = 4 . 3 = 12
f = 12 + 6 = 18

k reaches 3, loop stops
therefore e = 12 and f = 18


make a trace table to trace the action of algorithm 4.10.1 for the input variables given in 6 and 7
Algorithm 4.10.1  Diviison Algorithm

r = a, q = 0
while (r >= d)
r:= r - d
q:= q + 1
end while

6. a = 26, d = 7
Trace table
Iter 0 (initial before the loop runs)
a = 26
d = 7
r = 26
q = 0

Iter 1
check if r (26) >= d (7) - true, runs loop body
a = 26
d = 7
r = 26 - 7 = 19
q = 0 + 1 = 1

Iter 2
Check if r (19) >= d (7) - true, runs loop body
a = 26
d = 7
r = 19 - 7 = 12
q = 1 + 1 = 2

iter 3
check if r (12) >= d (7) - true, runs loop body
a = 26
d = 7
r = 12 - 7 = 5
q = 2 + 1 = 3

iter 4
check if r (5) >= d (7) - false, loop body stops
evaluates final result = quotient = 3, reminder = 5


7. a = 59, d = 13
Trace table
Iter 0 (initial before the loop runs)
a = 59
d = 13
r = 59
q = 0

Iter 1
check if r (59) >= d (13) - false, run loop body
a = 59
d = 13
r = 59 - 13 = 46
q = 0 + 1 = 1

Iter 2
check if r (46) >= d (13) - false, run loop body
a = 59
d = 13
r = 46 - 13 = 33
q = 1 + 1 = 2

Iter 3
check if r (33) >= d (13) - false, run loop body
a = 59
d = 13
r = 33 - 13 = 20
q = 2 + 1 = 3

Iter 4
check if r (20) >= d (13) - false, run loop body
a = 59
d = 13
r = 20 - 13 = 7
q = 3 + 1 = 4

Iter 5
check if r (7) >= d (13) - true, loop body stops, return final result
a = 59
d = 13
r = 7
q = 4

The folowing algorithm segment makes a change;
given an amount of money a between 1c and 99c
it determines a breakdown of A into quarters (q)
dimes (d), nicels (n), and pennies (p)

q:= A div 25
A:= A mod 25
d:= A div 10


a. Trace this algorithm segment for A = 69
input = 69c

b. trace this algorithm segment for A = 87
input = 87