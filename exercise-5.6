Test yourself

Exercise set 5.6
1. A recursive definition for a sequence cossits of a ___ and ___
answer: recurrence relation (recursive definition) and initial condition (base case)

2. a recurrence relation is an equation that defines each later term of a sequence by reference to
___ in the sequence
answer: its previous term

3. initial conditions for a recursive definition of a 
sequence consist of one or more of the ___ of the sequence
answer: values of the first few terms

4. to solve a problem recursively means to divide the problem into smaller subproblems of the same type as the tinitial suproblem
to suppose ___ and figure out how to use the supposition to
answer: the smaller problem is solved, solve the bigger initial problem

5. a crutial step for solving a problem recursively is to define a ___
in terms of which the recurrence erelation and initial conditions can be specified
answer: sequence

Exercise set 5.6
Find the first four terms of each of the recursively defined 
sequences in 1â€“8.

1. ak = 2a(k-1) + k for eveyr integer k>=2
a1 = 1
a2 = 2a1 + 2 = 2.1 + 2 = 4
a3 = 2a2 + 3 = 2.4 + 3 = 11
a4 = 2a3 + 4 = 2.11 + 4 = 26

2. bk = b(k-1) + 3k for every integer k>= 2
b1 = 1
b2 = b1 + 3k = 1 + 3.2 = 1 + 6 = 7
b3 = b2 + 3k = 7 + 3.3 = 7 + 9 = 16 
b4 = b3 + 3k = 16 + 3.4 = 16 + 12 = 28

3. ck = k(ck-1)^2 for every integer k>=1
c0 = 1
c1 = 1(c0)^2 = 1(1)^2 = 1
c2 = 2(c1)^2 = 2(1)^2 = 2
c3 = 3(c2)^2 = 3(2)^2 = 3.4 = 12

4. dk = k(dk-1)^2 for every integer k>= 1
d0 = 3
d1 = 1(d0)^2 = 1.(3)^2 = 1.9 = 9 
d2 = 2(d1)^2 = 2.(9)^2 = 2.81 = 162
d3 = 3(d2)^2 = 3.(162)^2 = 3. 78732 = 78732

5. sk = s(k-1) + 2s(k-2) for every integer k>=2
s0 = 1, s1 = 1
s2 = s(1) + 2 s(0) = 1 + 2.1 = 3
s3 = s(2) + 2 s(1) = 3 + 2.1 = 5
s4 = s(3) + 2 s(2) = 5 + 2.3 = 11

6. tk = t(k-1) + 2t(k-2) for every integer k>=2
t0 = -1
t1 = 2
t2 = t(1) + 2 t(0) = 2 + 2.-1 = 0
t3 = t(2) + 2 t(1) = 0 + 2 . 2 = 4
t4 = t(3) + 2 t(2) = 4 + 2 . 0 = 4

7. uk = ku(k-1) - u(k-2) for every integer k>=3
u1 = 1
u2 = 1
u3 = 3 u(2) - u(1) = 3 . 1 - 1 = 2
u4 = 4 u(3) - u(2) = 4 . 2 - 1 = 7

8. vk = v(k-1) + v(k-2) + 1 for every integer k>= 3
v1 = 1 
v2 = 3
v3 = v (2) + v(1) + 1 = 3 + 1 + 1 = 5
v4 = v (3) + v(2) + 1 = 5 + 3 + 1 = 9

9. let a0, a1, a2,... be defined by the formula
an = 3n + 1 for every integer n>=0
show that this sequence satisfies the recurrence relation
ak = a(k-1) + 3 for every integer k>=1

we know that an = 3n + 1
a(k-1) = 3(k-1) + 1 = 3k-3 + 1
= 3k - 2

substitute into the recurrence relation
3k-2 + 3
= 3k + 1

this follows the structure an = 3n + 1 therefore it satisfies the sequence

10. let b0, b1, b2,... be defined by the formula
bn = 4^n for every integer n>=0
show that this sequence satisfies the recurrence relation
bk = 4 b(k-1)  for every integer k>=1

from the explicit formula we know that bn = 4^n for every integer n>= 0
we can use substitution

b(k-1) = 4^(k-1)

substitute into the recurrence relation
b(k-1) = 4 . 4^(k-1)
= 4^(k-1+1) by the rule of exponents
= 4^k
since the RHS of the recurrence relation simplifies to 4^k (equal to the explicit formula)
therefore it satisfies the sequence

11. let c0, c1, c2,... be defined by the formula
cn = 2^n - 1 for every integer n>=0
show that this sequence satisfies the recurrence relation
ck = 2 c(k-1) + 1  for every integer k>=1

from the explicit formual we know that cn = 2^n-1 for every integer n>=0
we can use substitution for k-1 for both

explicit formula
c(k-1) = 2^(k-1) - 1

recurrence relation
c(k-1) = 2 c(k-1) + 1
= 2 (2^(k-1) - 1) + 1
= 2.2^(k-1) -2 + 1
= 2.2^(k-1) - 1
= 2^(k-1+1) - 1
= 2^k - 1

therefore it follows the same structure as cn

12. let s0, s1, s2,... be defined by the formula
sn = (-1)^n / n! for every integer n>=0
show that this sequence satisfies the recurrence relation
sk = -s(k-1)/k  for every integer k>=1

s(k-1) = (-1)^k-1 / (k-1)!

substitute into recurrence relation
sk = -((-1)^k-1 / (k-1)!) / k
= -1^k / k!

therefore it satisfiesthe sequence 

13. let t0, t1, t2,... be defined by the formula
tn = 2 + n for every integer n>=0
show that this sequence satisfies the recurrence relation
tk = 2t(k-1) - t(k-2)  for every integer k>=2

substitute explicit formula with k-1 and k - 2
t(k-1) = 2 + k-1 = k + 1
t(k-2) = 2 + k-2 = k

substitute into recurrence relation
tk = 2.k + 1 - k
= 2k+2 - k
= k + 2 = 2 + k

therefore seqence satisfies.

14.let d0, d1, d2,... be defined by the formula
dn = 3^n - 2^n for every integer n>=0
show that this sequence satisfies the recurrence relation
dk = 5d(k-1) - 6d(k-2) for every integer k>=2

substitute explicit formula with k-1 and k-2
d(k-1) = 3^(k-1) - 2^(k-1)
d(k-2) = 3^(k-2) - 2^(k-2)

substitute the recurrence relation
dk = 5d(k-1) - 6d(k-2)
= 5 . (3^(k-1) - 2^(k-1)) - 6 . (3^(k-2) - 2^(k-2))
= 3^k - 2^k

therefore sequence satisfites

15. for the sequence of catalan numbers defined in example 5.6.4, prove that for each integer n>=1
cn = 1/4n+2 (2n+2 choose n + 1)

from 5.6.4
explicit formula -> cn = 1/n+1 (2n choose n)
recurrence relation -> ck = 4k-2 / k+1 C(k-1)

prove the base case
substitute n = 0
c0 = 1 / 0 + 1 (0 choose 0)
= 1

prove the recurrnece relation, substitute k-1 using explicit formul
RHS = 4k-2 / k+1 C(k-1)

c(k-1) =  1/k-1+1 (2k-2 choose k-1)
= 1/k (2k-2 choose k-1)

2k-2 choose k-1 = (2k-2)! / k-1! k-1!

RHS = 4k-2 . (2k-2)! / k-1! k-1!
= 1/k+1 (2k choose k) therefore its satisfied

16. use the recurrence relation and values for the tower of hanoi sequence
m1, m2, m3, ... discussed in example 5.6.5 to compute m7 and m8

for each integer n>=1 let
mn = [the min number of moves needed to transfer a tower of n disks from one pole to another]

from the book
recurrence relation -> mk = 2m(k-1) + 1
initial condition -> m1 = 1

m7 = 2.m(6) + 1 = 2 . 63 + 1 = 127
m8 = 2.m(7) + 1 = 2 . 127 + 1 = 255

17. tower of hanoi with adjacency requirement:
Suppose that in addition to the requirement that 
they never move a larger disk on top of a smaller 
one, the priests who move the disks of the Tower 
of Hanoi are also allowed only to move disks one 
by one from one pole to an adjacent pole. Assume 
poles A and C are at the two ends of the row and 
pole B is in the middle. Let

an = [the minimum number of moves needed to transfer a tower of n disks from pole a to pole c]

a. find a1, a2, and a3
b. find a4
c. find recurence relation for a1, a2, a3, ... and justify your answer

answer:
a. a1 = [the minimum number of moves needed to transfer a tower of 1 disks from pole a to pole c]
because of the adjacency reqirement, we will need at least 2 moves to trasfer 1 disk A from disk C
A -> B -> C = 2 moves.
a2 = [the minimum number of moves needed to transfer a tower of 2 disks from pole a to pole c]
let dlarge = large disk, and dsmall = small disk
move 1: move the dsmall one from A to disk B
move 2: move it again to disk C
move 3: now move dlarge to B
move 4: move dsmall on top of B, so now they are both stacked
move 5: move dsmall back to A
move 6: move dlarge to C
move 7: move dsmall to B
move 8: move dsmall to C, completing the tower
a3 =  [the minimum number of moves needed to transfer a tower of 3 disks from pole a to pole c]
move to a more general steps
assume that that a1 = 2 and a2 = 8
step 1: move the top (n-1) disks from A to C (this needs an-1 moves)
now the largest disk n is on A, and the (n-1) top disks are on c
step 2: move the n (largest) disk from A to B (1 total move)
step 3: move the (n-1) disks to A so we can move the n disk to C (needs an-1 moves)
step 4: now move the n disk from B to C (1 total move)
step 5: now move the n-1 disk from A to C (requires another an-1 moves)

total move = 3 . ak-1 + 2
a3 = 3(8) + 2 = 24 + 2 = 26

b. a4 = 3 . a(3) + 2 = 3 . 26 + 2 = 80

c. find the recurrence relation for a1, a2, and a3
the recurrence relation is ak = 3 . ak-1 + 2
first: move the top k-1 smallest disk from  A -> C
at this point, the largest disk K is on A
second: move K from A - > B
third: move k-1 disk from C - > A
fourth: move K from B -> C
fifth: move k-1 disk from A -> C again, compelting the tower

ak = a(k-1) + 1 + a(k-1) + 1 + a(k-1)
ak = 3.a(k-1) + 2 with the initial condition a1 = 2 and for every integer k>= 2

18. tower of hanoi with adjacency requirement
suppose the same situtation as in exercise 17. let
bn = [the minimum number of moves needed to transfer a tower of n disks from pole A to pole B]

a. find b1, b2, and b3
b. find b4
c. show that bk = ak + 1 + bk-1 for each integer k>=2 where a1, a2, a3, ... is the sequence defined in exercise 17
d. show that bk <= 3bk-1 + 1 for each integer k>=2

answer:
a. b1 = [the minimum number of moves needed to transfer a tower of 1 disks from pole A to pole B]
it's 1 move because A -> B = 1 move
b2 = [the minimum number of moves needed to transfer a tower of 2 disks from pole A to pole B]
move 1: move the top smaller disk from A -> B
move 2: move the top smaller disk from B -> C
move 3: move the larger disk from A -> B
move 4: move the smaller disk back from C -> B, completing the tower
total moves = 4
b3 = [the minimum number of moves needed to transfer a tower of 3 disks from pole A to pole B]
now for a generalized step
suppose b1 = 1 and b2 = 4
step 1: move the top (n-1) disks from A - > B (needs bn-1 moves)
step 2: move the top (n-1) disks again from B -> C (needs bn-1 moves)
step 2: move the largest n disk from A -> B (1 move)
step 3: move back the top (n-1) disks from C -> B (beeds bn-1 moves), completing the tower

total move = 3 . bn-1 + 1
b3 = 3 . b(3-1) + 1
b3 = 3 . b(2) + 1
b3 = 3 . 4 + 1 = 13

b4 = 3 . b3 + 1 = 40

c.
move 1: move the top smaller disk from A -> C (ak-1 move)
move 3: move the larger disk from A -> B (1 move)
move 4: move the smaller disk back from C -> B, (bk-1) completing the tower
total = ak-1 + 1 + bk-1 for each integer k>=2

d. 
move 1: move the top smaller disk from A -> B (bk-1 move)
move 2: move the top smaller disk from B -> C (bk-1 move)
move 3: move the larger disk from A -> B (1 move)
move 4: move the smaller disk back from C -> B, (bk-1 move) completing the tower
total = 3. bk-1 + 1

19. Four-Pole Tower of Hanoi: Suppose that the 
Tower of Hanoi problem has four poles in a row 
instead of three. Disks can be transferred one by 
one from one pole to any other pole, but at no time 
may a larger disk be placed on top of a smaller 
disk. Let sn be the minimum number of moves 
needed to transfer the entire tower of n disks from 
the left-most to the right-most pole.

a. find s1, s2, and s3
b. find s4
c. show that sk <= 2s(k-2) + 3 for every integer k>= 3

answer:
sn = [the minimum number of moves needed to transfer the entire tower of n disks from the left-most to the right-most pole.]
let left most = A, right most = D
a. s1: 
s1 = [the minimum number of moves needed to transfer the entire tower of 1 disks from the left-most to the right-most pole.]
total steps = 1, from A -> D
s2 = [the minimum number of moves needed to transfer the entire tower of 2 disks from the left-most to the right-most pole.]
move 1: move smaller form A -> B (1 move)
move 2: move larger disk from A -> D (1 move)
move 3: move smaller disk from B -> D (1 move)
total move: 3   
s3 = [the minimum number of moves needed to transfer the entire tower of 2 disks from the left-most to the right-most pole.]
disk 1 = smallest, disk 2 = mid, disk 3 = largest
move 1: move disk 1 from A -> B
move 2: move disk 2 from A -> C
move 3: move disk 3 from A -> D
move 4: move disk 2 from C -> D
move 5: move disk 1 from B -> D
total move = 5

b. find s4
generalized solution
move 1: move top smallest n-1 disk from A -> B
move 2: move largest n disk from A -> D
move 3: move the top smallest n-1 disk back from B -> D


20. Tower of Hanoi Poles in a Circle: Suppose that 
instead of being lined up in a row, the three poles 
for the original Tower of Hanoi are placed in a 
circle. The monks move the disks one by one from 
one pole to another, but they may only move disks 
one over in a clockwise direction and they may 
never move a larger disk on top of a smaller one. 
Let cn be the minimum number of moves needed 
to transfer a pile of n disks from one pole to the 
next adjacent pole in the clockwise direction.
a. justify the inequality ck <= 4c(k-1) + 1 for each integer k>=2
b. the expression 4c(k-1) + 1 is not the minimum number of moves needed
to transfer a pile of k disks from one pole to another explain for example why
c3 does not equal 4c2+1

answer:
a. move top k-1 smaller disk from P1 to P3 (2 . ck-1 move)
move largest disk k from P1 to P2 (1 move)
then finally move back top k-1 smaller disk from P3 to P1 (2 . ck-1 move)
total move = 2ck-c + 1 + 2ck-1 = 4ck-1 + 1

b. let mn be the minium moves to transfer n disk one step clockwise
let an be the Minimum num of moves to transfer n disk two step clockwise

mk = 2ak-1 + 1
ak = 2mk-1 + 2

22. Fibonacci Variation: A single pair of rabbits 
(male and female) is born at the beginning of a 
year. Assume the following conditions (which are 
somewhat more realistic than Fibonacciâ€™s):

1. rabbit pairs are not fertile during first months of life but thereafter
give birth to four new male/female pairs at the end of every month
2. no rabbits die

a. let rn = the number of pairs of rabbits alive at 
the end of month n, for each integer n >= 1, and
let r0 = 1. find a recurrence relation for r0, r1, r2 ... justify your answer
b. compute r0, r1, r2, r3, r4, r5 and r6
c. how many rabbits will three be at the end of the year?

answer:
a.
rk represents the total number of rabbit pairs alive at the end of month k
rk = [pairs alive from prev month] + [newborn pairs at the end of month k]
rk = rk-1 + [4 . rk - 2]

justification:
rk-1 is the pair that is alive from the previous month - these pairs ae still alive on month k because no rabbits die
4 . rk-2 is the newborn pairs at the end of month k because by the rule rabbit are fertile at the end of 2nd month
and they give birth to 4 new ones. rk-2 because needs at least 2 months to be fertile and pairs that are alive

b. r0 = 1,
r1 = 1
r2 = 5
r3 = r2 + [4 . r1] = 5 + 4.1 = 9
r4 = r3 + [4 . r2] = 9 + 4.5 = 29
r5 = r4 + [4 . r3] = 29 + 4.9 = 65
r6 = r5 + [4 . r4] = 65 + 4.29 = 181

c. how many rabbits will there be at the end of the year?
r12 = r11 + [4 . r10] = 49661

23. A single pair of rabbits 
(male and female) is born at the beginning of a 
year. Assume the following conditions:
1. Rabbit pairs are not fertile during their first 
two months of life, but thereafter give birth 
to three new male/female pairs at the end of 
every month.
2. no rabbits die

a. let sn = the number of pairs of rabits alive at the end of month n,
for each integer n>=1 and lset s0 = 1
find a recurrence relation for s0, s1, s2,... justify your answer
b. compute s0,s1...,s5
c. how many rabbits wil there be at the end of the year?

answer:
a. sk represents the number of pairs of rabbits alive at the end of month k
sk = [pairs alive at the end of month sk-1] + [pairs alive at the end of month k]
= sk-1 + 3.sk-3
justification:
sk-1 is all of the rabbit pairs alive up to month k-1 because no rabbits die its accumulated
3.sk-3 is the newborn pair at the last month k and because by the rule rabbits are fertile at the end of 3rd month
they give birth to 3 additional pairs.

b. 
s0 = 1
s1 = 1
s2 = 1
s3 = sk2 + 3.sk0 = 1 + 3.1 = 4 
s4 = sk3 + 3.sk1 = 4 + 3.1 = 7
s5 = sk4 + 3.sk2 = 7 + 3.1 = 10
s6 = sk5 + 3.sk3 = 10 + 3.4 = 22

c. rabits at the end of the year = 904

in 24 - 34, f0, f1, f2, ... is the fibonacci sequence
24. use the recurrence relation and values for f0,f1,f2,... given in example 5.6.6 to compute f13 and f14
base case: f0 = 1, f1 = 1
f13 = f12 + f11 = 233 + 144 = 377
f14 = f13 + f12 = 377 + 233 = 610

25. the fibonacci sequence satisfies the recurrence relation
fk = fk-1 + fk-2 for every integer k>=2
a. explain why the following is true
fk+1 = fk + fk-1 for each integer k>=1
this is esentially shifting the index by adding1 based on fk so it's the same thing

b. write an equation expression fk+2 in terms of fk+1 and fk
fk+2 = fk+1 + fk

c. write an equation expressing fk+3 in terms of fk+2 and fk+1
fk+3 = fk+2 + fk+1

26. prove that fk = 3fk-3 + 2fk-4 for every integer k>=4

we know that fibonaci number is the sum of the two preceding ones
fk = fk-1 + fk-2

then we can shift the terms
fk-2 = fk-3 + fk-4
and substitute back to the original fk
fk = fk-1 + (fk-3 + fk-4)

then for fk-1 we can use the same thing
fk-1 = fk-2 + fk-3
and substitute back
fk = (fk-2 + fk-3) + (fk-3 + fk-4)
fk = fk-2 + 2.fk-3 + fk-4
subsitute fk-2 once more
fk = (fk-3 + fk-4) + 2fk-3 + fk-4
fk = 3fk-3 + 2fk-4

therefore it's proven

27. prove that f^2k - f^2k-1 = fk . fk+1 - fk-1 . fk+1 for every integer k>= 1
by the main definition of fibonacci
fk = fk-1 + fk-2

RHS of f^2k - f^2k-1
= fk . fk+1 - fk-1 . fk+1 
= fk+1 (fk-fk-1)
= fk+1 (fk-1 + fk-2 - fk-1)
= fk+1 . fk-2

now LHS
f^2k - f^2k-1
= (fk-fk-1)(fk+fk-1)
= (fk-1 + fk-2 - fk-1) (fk-1 + fk-2 + fk-1)
= fk-2 . (2fk-1 + fk-2)

show that (2fk-1 + fk-2) = fk+1
fk+1 = fk + fk-1
fk+1 = fk-1 + fk-2 + fk-1
fk+1 = 2fk-1 + fk-2

therefore its proven

28. prove that f^2k+1 - f^2k - f^2k-1 = 2fk . fk-1 for each integer k>=1
by the definition of fibonacci
fk = fk-1 + fk-2

RHS -> 2fk . fk-1
= 2(fk-1 + fk-2) . fk-1
= 2f^2k-1 + 2fk-2fk-1

LHS -> f^2k+1 - f^2k - f^2k-1
fk+1 = fk + fk-1 - substitute into f^2k+1

(fk+fk-1)^2 - f^2k - f^2k-1
= f^2k + 2fkfk-1 + f^2k-1 - f^2k - f^2k-1
= 2fk . fk-1

29. prove that f^2k+1 - f^2k = fk-1 . fk+2 for every integer k>=1
by the definition of fibonaci,
fk = fk-1 + fk-2

RHS -> fk-1 . (fk + fk+1)
= fk-1 . fk + fk + fk-1
= fk-1 . 2fk + fk-1


LHS -> f^2k+1 - f^2k
= (fk+1 - fk) (fk+1 + fk)

fk+1 = fk + fk-1
=  (fk + fk-1 - fk) (fk + fk-1 + fk)
= fk-1 (2fk + fk-1)

therefore proven

30. use math induction to prove tat for each integer n>=0, fn+2 . fn - f^2n+1 = (-1)^n
answer:

base case: n = 0
we know f0 = 1 , f1 = 1, f2 = 2
= f0+2 . f0 - f^20+1 = (-1)^0
=f2 . 1 - f1^2 = 1
= 2 . 1 - 1 = 1
1 = 1

inductive hyphotesis
assume that the statement is true for arbitrary integer k>=0
assume that fk+2 . fk - f^2k+1 = (-1)^k is true

we need to show that f(k+1) is true
we need to show that fk+3 . fk+1 - f^2k+2 = (-1)^k+1 is true

LHS -> fk+3 . fk+1 - f^2k+2
= (fk+2 + fk+1) . fk+1 - f^2k+2
RHS -> (-1)^k+1


37. compound interest: suppost a certain amount of money 